header 

bool containInt(int[] array, int x) is
	int index = 0;
	int length = len array;
	while index != length do
		if array[index] == x then return true
		else index = index + 1 fi
	done;
	return false
end

bool containChar(char[] array, char x) is
	int index = 0;
	int length = len array;
	while index != length do
		if array[index] == x then return true
		else index = index + 1 fi
	done;
	return false
end

int[] concatIntArray(int[] x, int[] y) is
	int[] output = [];
	int length = (len x) + (len y);
	int index = 0;
	int indexX = 0;
	while indexX < (len x) do
		output[index] = x[indexX];
		indexX = indexX + 1;
		index = index + 1
	done;

	int indexY = 0;
	while indexY < (len y) do
		output[index] = y[indexY];
		indexY = indexY + 1;
		index = index + 1
	done;
	return output
end

char[] concatCharArray(char[] x, char[] y) is
	char[] output = [];
	int length = (len x) + (len y);
	int index = 0;
	int indexX = 0;
	while indexX < (len x) do
		output[index] = x[indexX];
		indexX = indexX + 1;
		index = index + 1
	done;

	int indexY = 0;
	while indexY < (len y) do
		output[index] = y[indexY];
		indexY = indexY + 1;
		index = index + 1
	done;
	return output
end

int[] copyIntArray(int[] x) is
	int[] y = [];
	int[] copy = call concatIntArray(x, y);
	return copy
end

char[] copyCharArray(char[] x) is
	char[] y = [];
	char[] copy = call concatCharArray(x, y);
	return copy
end

int sortIntArray(int[] x) is
	if (len x) == 0 
		then return 0 
		else return 0
	fi;
	int upperIndex = (len x) - 1;
	int x = call quickSort(x, 0, upperIndex);
	return x
end

int quickSort(int[] x, int lIndex, int uIndex) is
	int i = lIndex;
	int j = uIndex;
	int pivot = x[lIndex + (uIndex - lIndex)/2];
	while i <= j do
		while x[i] < pivot do
			i = i + 1
		done;

		while x[j] > pivot do
		j = j - 1
		done
	done;

	int res = 0;
	if lIndex < j 
		then res = call exchangeNumbers(i, j, x); 
			 i = i + 1; 
			 j = j - 1
		else skip
	fi;

	if i < uIndex 
		then res = call quickSort(x, i, uIndex) 
		else skip
	fi;

	if lIndex < j 
		then res = call quickSort(x, lIndex, j) 
		else skip
	fi;
	return 0
end

int exchangeNumbers(int i, int j, int[] x) is
	int temp = x[i];
	x[i] = x[j];
	x[j] = temp;
	return 0
end

int printIntArray(int[] x) is
	int index = 0;
	print '[';
	while index < (len x) do
		print x[index];
		print ',';
		print ' ';
		index = index + 1
	done;
	print ']';
	println ' ';
	return 0
end

int printCharArray(char[] x) is
	int index = 0;
	print '[';
	while index < (len x) do
		print x[index];
		print ',';
		print ' ';
		index = index + 1
	done;
	print ']';
	println ' ';
	return 0
end

end