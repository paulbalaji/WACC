var tree = require('pretty-tree');

function excludeCharFilter(ch) {
	return function(elem) {
		return elem !== ch;
	}
}

 function makePretty(ast, fieldName) {
 	var res = {};
 	
 	if (ast === null) {
 		res.label = 'Null';
 		res.nodes = [];
 		return res;
 	}

 	var type = ast.constructor.name;
 	var fieldNameWithType = fieldName + ':' + type;



 	if (type.toLowerCase() === 'string' || type.toLowerCase() === 'number') {
 		res.label = fieldNameWithType;
 		res.nodes = [{label: ast}];
 		return res;
 	}

 	if (ast instanceof Array) {
 		res.label = fieldNameWithType;
 		res.nodes = ast.filter(excludeCharFilter(' ')).map(makePretty);
 		return res;
 	}

 	var nodes = [];
 	for (var field in ast) {
		if (ast.hasOwnProperty(field)) {
 			nodes.push(makePretty(ast[field], field));
		}
 	}

 	res.label = fieldNameWithType;
 	res.nodes = nodes;

 	return res;
 }

module.exports = function (ast, rootLabel) { 
	console.log(tree(makePretty(ast, rootLabel)));
}


